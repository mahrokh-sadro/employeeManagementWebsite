{{!-- Replace the <p> element (containing the TODO message) with code to iterate over eachemployeeand simply render their
    first and last names(you may assume that there will be an "employees" array (see below). â€¢Once this is done, update
    yourGET"/employees" route according to the following specificationoEvery time you would have usedres.json(data),
    modify it to instead useres.render("employees", {employees: data})oEvery time you would have usedres.json({message:
    "no results"}) -ie: when the promise has an error(ie in .catch()), modify instead to useres.render("employees",
    {message: "no results"}) --}}

<div class="row">
    <div class="col-md-12">
        <h2>Employees</h2>
        <hr />

    {{!-- {{#each employees}}
      {{this.firstName}} {{this.lastName}}<br/>
    {{/each}};
     --}}


<table class="table">
  <thead>
    <tr>
      <th scope="col">Employee Num  </th>
      <th scope="col">Full Name</th>
      <th scope="col">Email</th>
      <th scope="col">Address</th>
      <th scope="col">Manager ID</th>
      <th scope="col">Status</th>
      <th scope="col">Department</th>
      <th scope="col">Hired On</th>
    </tr>
  </thead>
  <tbody>
      {{#each employees}}
    <tr>
      <th scope="row">{{this.employeeNum}}</th>
      <td>{{this.firstName}} {{this.lastName}}</td>
      <td>{{this.email}}</td>
      <td>{{this.addressStreet}}{{this.addressCity}}{{this.addressState}}{{this.addressPostal}}</td>
       <td></td>
      <td>{{this.status}}</td>
      <td>{{this.department}}</td>
       <td>{{this.hireDate}}</td>
    </tr>
    {{/each}}
  </tbody>
</table>













    </div>
</div>